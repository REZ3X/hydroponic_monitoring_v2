// Modified Realtime API Route with Background Monitoring
// This integrates the monitoring service into your existing realtime endpoint

import { NextRequest, NextResponse } from "next/server";
import clientPromise from "@/lib/mongodb";
import { monitorAndNotify } from "@/lib/monitoringService";

export const dynamic = "force-dynamic";

export async function GET(request: NextRequest) {
  try {
    const client = await clientPromise;
    const db = client.db("hydroponic_monitoring");

    const data = await db
      .collection("weather_data")
      .find({})
      .sort({ timestamp: -1 })
      .limit(1)
      .toArray();

    const formattedData = data.map((item) => ({
      id: item._id.toString(),
      temperature: item.temperature,
      humidity: item.humidity,
      timestamp: item.timestamp,
      water_temp: item.water_temp,
      connected: item.connected,
    }));

    // Monitor sensor data and send notifications if needed
    if (formattedData.length > 0) {
      const sensorData = formattedData[0];
      await monitorAndNotify({
        temperature: sensorData.temperature,
        humidity: sensorData.humidity,
        water_temp: sensorData.water_temp,
      });
    }

    return NextResponse.json(formattedData);
  } catch (error) {
    console.error("Error fetching realtime data:", error);
    return NextResponse.json(
      { error: "Failed to fetch data" },
      { status: 500 }
    );
  }
}
